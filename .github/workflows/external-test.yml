name: External Test

on:
  push:
    branches:
    - '**/test**'
    tags:
    - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
    - master


jobs:
  test_wasm_learning:
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:ubuntu2004_x86_64
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
        rustwasmc-options: ['', '--enable-aot']

    steps:
    - uses: actions/checkout@v2

    - name: Checkout wasm-learning
      uses: actions/checkout@v2
      with:
        repository: second-state/wasm-learning
        path: wasm-learning

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Set Rust to required version
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.50.0
        override: true

    - name: Install dependencies
      run: |
        apt update && apt install -y sudo
        npm install --unsafe-perm -g rustwasmc
        ln -s $(which node) /usr/local/bin/node
        ln -s $(which npm) /usr/local/bin/npm

    - name: Build and install wasmedge-core
      uses: './.github/actions/build-from-source'

    - name: Test functions ${{ matrix.rustwasmc-options }}
      run: |
        rustwasmc build ${{ matrix.rustwasmc-options }}
        cd pkg && sudo npm i ${GITHUB_WORKSPACE} && cd ..
        node node/app.js
        rustwasmc clean
      working-directory: wasm-learning/nodejs/functions

    - name: Test JSON IO ${{ matrix.rustwasmc-options }}
      run: |
        rustwasmc build ${{ matrix.rustwasmc-options }}
        cd pkg && sudo npm i ${GITHUB_WORKSPACE} && cd ..
        node node/app.js
        rustwasmc clean
      working-directory: wasm-learning/nodejs/json_io

    - name: Test WASI ${{ matrix.rustwasmc-options }}
      run: |
        rustwasmc build ${{ matrix.rustwasmc-options }}
        cd pkg && sudo npm i ${GITHUB_WORKSPACE} && cd ..
        node node/app.js
        rustwasmc clean
      working-directory: wasm-learning/nodejs/wasi

    - name: Test KMeans ${{ matrix.rustwasmc-options }}
      if: ${{ contains(matrix.rustwasmc-options, 'aot') }}
      run: |
        rustwasmc build ${{ matrix.rustwasmc-options }}
        cd pkg && sudo npm i ${GITHUB_WORKSPACE} && cd ..
        cd node
        node app.js
        cd -
        rustwasmc clean
      working-directory: wasm-learning/nodejs/kmeans
